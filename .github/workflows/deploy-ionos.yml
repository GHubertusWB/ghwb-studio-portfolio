name: Deploy to IONOS

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Ermöglicht manuelles Auslösen

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Deploy to IONOS via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.IONOS_FTP_HOST }}
        username: ${{ secrets.IONOS_FTP_USER }}
        password: ${{ secrets.IONOS_FTP_PASSWORD }}
        local-dir: ./out/
        server-dir: /
        
    - name: Create .htaccess for IONOS
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.IONOS_FTP_HOST }}
        username: ${{ secrets.IONOS_FTP_USER }}
        password: ${{ secrets.IONOS_FTP_PASSWORD }}
        local-dir: ./
        server-dir: /
        include: '["deploy-ionos-htaccess"]'

  # Alternative: SFTP Deployment (falls FTP nicht funktioniert)
  deploy-sftp:
    runs-on: ubuntu-latest
    if: failure() # Nur wenn FTP fehlschlägt
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Deploy via SFTP
      uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      with:
        server: ${{ secrets.IONOS_SFTP_HOST }}
        username: ${{ secrets.IONOS_SFTP_USER }}
        password: ${{ secrets.IONOS_SFTP_PASSWORD }}
        local_path: './out/*'
        remote_path: '/htdocs'
        delete_remote_files: true
